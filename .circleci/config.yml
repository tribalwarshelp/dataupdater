version: 2
jobs:
  build_latest:
    docker:
      - image: circleci/golang:1.16
    working_directory: ~/twhelpcron
    steps:
      - checkout
      - setup_remote_docker
      # start proprietary DB using private Docker image
      # with credentials stored in the UI
      - run: |
          docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
      # build the cron image
      - run: docker build -f cmd/cron/Dockerfile -t $DOCKER_LOGIN/twhelp-cron:latest .
      # build the data updater image
      - run: docker build -f cmd/dataupdater/Dockerfile -t $DOCKER_LOGIN/twhelp-dataupdater:latest .
      # deploy the images
      - run: docker push $DOCKER_LOGIN/twhelp-cron:latest
      - run: docker push $DOCKER_LOGIN/twhelp-dataupdater:latest
  build_version:
    docker:
      - image: circleci/golang:1.16
    working_directory: ~/twhelpcron
    steps:
      - checkout
      - setup_remote_docker
      # start proprietary DB using private Docker image
      # with credentials stored in the UI
      - run: |
          docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
      # build the cron image
      - run: docker build -f cmd/cron/Dockerfile -t $DOCKER_LOGIN/twhelp-cron:$(echo $CIRCLE_TAG | sed -r 's/^.{1}//') .
      # build the data updater image
      - run: docker build -f cmd/dataupdater/Dockerfile -t $DOCKER_LOGIN/twhelp-dataupdater:$(echo $CIRCLE_TAG | sed -r 's/^.{1}//') .
      # deploy the images
      - run: docker push $DOCKER_LOGIN/twhelp-cron:$(echo $CIRCLE_TAG | sed -r 's/^.{1}//')
      - run: docker push $DOCKER_LOGIN/twhelp-dataupdater:$(echo $CIRCLE_TAG | sed -r 's/^.{1}//')
workflows:
  version: 2
  deploy_latest:
    jobs:
      - build_latest:
          context: TWHelp
          filters:
            branches:
              only:
                - master
  deploy_version:
    jobs:
      - build_version:
          context: TWHelp
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
